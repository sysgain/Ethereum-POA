{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "defaultValue": "pa",
            "metadata": {
                "description": "String used as a base for naming resources (2 to 4 alphanumeric characters).  A unique hash is prepended to the string for some resources, while resource-specific information is appended."
            },
            "maxLength": 4
        },
        "regionCount": {
            "type": "int",
            "defaultValue": 5,
            "allowedValues": [
                1,
                2,
                3,
                4,
                5
            ],
            "metadata": {
                "description": "Select the number of region(s) to deploy virtual machines into."
            }
        },
        "location_1": {
            "type": "string",
            "defaultValue": "westus",
            "metadata": {
                "description": "Select the first region."
            }
        },
        "location_2": {
            "type": "string",
            "defaultValue": "eastus",
            "metadata": {
                "description": "Select the second region."
            }
        },
        "location_3": {
            "type": "string",
            "defaultValue": "centralus",
            "metadata": {
                "description": "Select the third region."
            }
        },
        "location_4": {
            "type": "string",
            "defaultValue": "eastus2",
            "metadata": {
                "description": "Select the fourth region."
            }
        },
        "location_5": {
            "type": "string",
            "defaultValue": "westus2",
            "metadata": {
                "description": "Select the fifth region."
            }
        },
        "consortiumMemberId": {
            "type": "int",
            "minValue": 0,
            "maxValue": 255,
            "metadata": {
                "description": "Unique consortium ID for every memnber"
            }
        },
        "authType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authorization type for SSH access to VMs"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "ashuser",
            "metadata": {
                "description": "Administrator username of each deployed VM (alphanumeric characters only)"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Ashpassword123",
            "metadata": {
                "description": "Administrator password for each deployed VM"
            }
        },
        "adminSSHKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH RSA public key file as a string"
            }
        },
        "validatorNodeVMSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "Size of the virtual machine for transaction nodes"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Type of managed disks to create"
            }
        },
        "connectionSharedKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Shared Key for the Gateway Connection"
            }
        },
        "consortiumMemberGatewayId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The ResourceId of the Consortium Member VNet Gateawy to which to connect to"
            }
        },
        "nodeCountPerRegion": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of load balanced transaction nodes"
            },
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "minValue": 1,
            "maxValue": 10
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "description": "The base URL for dependent assets",
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://raw.githubusercontent.com/sysgain/Ethereum-POA/code-v1"
        }
    },
    "variables": {
        "namingInfix": "[concat(parameters('namePrefix'),'rity')]",
        "trafficManagerSettings": {
            "trafficManagerName": "[concat(variables('namingInfix'),'-traffMgr')]",
            "dnsRelativeName": "[concat(variables('namingInfix'), '-traf-',variables('uniq'))]",
            "dnsTtl": 60,
            "monitorProtocol": "TCP",
            "monitorPort": 80,
            "monitorPath": "/",
            "endpointNamePrefix": "[concat(variables('namingInfix'), '-lb-pip')]"
        },
        "apis": {
            "apiVersionTrafficManager": "2017-05-01",
            "apiVersionDeployments": "2016-02-01",
            "apiVersionNetworkSecurityGroups": "2017-06-01",
            "apiVersionPublicIPAddresses": "2017-06-01",
            "apiVersionLoadBalancers": "2017-06-01",
            "apiVersionVirtualNetworks": "2017-06-01",
            "apiVersionVirtualNetworkGateways": "2017-06-01",
            "apiVersionVirtualMachineScaleSets": "2017-03-30",
            "apiVersionConnections": "2017-06-01",
            "apiVersionDocumentDb": "2015-04-08",
            "apiVersionKeyVault": "2016-10-01"
        },
        "locationArray": [
            "[parameters('location_1')]",
            "[parameters('location_2')]",
            "[parameters('location_3')]",
            "[parameters('location_4')]",
            "[parameters('location_5')]"
        ],
        "suffixArray": [
            "reg1",
            "reg2",
            "reg3",
            "reg4",
            "reg5"
        ],
        "linkedUrls": {
            "networkResourcesUrl": "[concat(parameters('baseUrl'),'/nested/network-resources.json')]",
            "vmssResourcesUrl": "[concat(parameters('baseUrl'),'/nested/vmss.json')]",
            "keyVltResourcesUrl": "[concat(parameters('baseUrl'),'/nested/key-vault.json')]"
        },
        "vnetSettings": [
            {
                "vnetName": "[concat(variables('namingInfix'),'-vnet-',variables('suffixArray')[0])]",
                "addressPrefixes": "[replace('10._.16.0/20','_',string(parameters('consortiumMemberId')))]",
                "subnet1Name": "[concat('subnet-',variables('suffixArray')[0])]",
                "subnet1Prefix": "[replace('10._.17.0/24','_',string(parameters('consortiumMemberId')))]",
                "subnet2Name": "[concat('gateway-subnet-',variables('suffixArray')[0])]",
                "subnet2Prefix": "[replace('10._.18.0/24','_',string(parameters('consortiumMemberId')))]",
                "nsgName": "[concat('Front-End-NSG-',variables('suffixArray')[0])]"
            },
            {
                "vnetName": "[concat(variables('namingInfix'),'-vnet-',variables('suffixArray')[1])]",
                "addressPrefixes": "[replace('10._.32.0/20','_',string(parameters('consortiumMemberId')))]",
                "subnet1Name": "[concat('subnet-',variables('suffixArray')[1])]",
                "subnet1Prefix": "[replace('10._.33.0/24','_',string(parameters('consortiumMemberId')))]",
                "subnet2Name": "[concat('gateway-subnet-',variables('suffixArray')[1])]",
                "subnet2Prefix": "[replace('10._.34.0/24','_',string(parameters('consortiumMemberId')))]",
                "nsgName": "[concat('Front-End-NSG-',variables('suffixArray')[1])]"
            },
            {
                "vnetName": "[concat(variables('namingInfix'),'-vnet-',variables('suffixArray')[2])]",
                "addressPrefixes": "[replace('10._.48.0/20','_',string(parameters('consortiumMemberId')))]",
                "subnet1Name": "[concat('subnet-',variables('suffixArray')[2])]",
                "subnet1Prefix": "[replace('10._.49.0/24','_',string(parameters('consortiumMemberId')))]",
                "subnet2Name": "[concat('gateway-subnet-',variables('suffixArray')[2])]",
                "subnet2Prefix": "[replace('10._.50.0/24','_',string(parameters('consortiumMemberId')))]",
                "nsgName": "[concat('Front-End-NSG-',variables('suffixArray')[2])]"
            },
            {
                "vnetName": "[concat(variables('namingInfix'),'-vnet-',variables('suffixArray')[3])]",
                "addressPrefixes": "[replace('10._.64.0/20','_',string(parameters('consortiumMemberId')))]",
                "subnet1Name": "[concat('subnet-',variables('suffixArray')[3])]",
                "subnet1Prefix": "[replace('10._.65.0/24','_',string(parameters('consortiumMemberId')))]",
                "subnet2Name": "[concat('gateway-subnet-',variables('suffixArray')[3])]",
                "subnet2Prefix": "[replace('10._.66.0/24','_',string(parameters('consortiumMemberId')))]",
                "nsgName": "[concat('Front-End-NSG-',variables('suffixArray')[3])]"
            },
            {
                "vnetName": "[concat(variables('namingInfix'),'-vnet-',variables('suffixArray')[4])]",
                "addressPrefixes": "[replace('10._.80.0/20','_',string(parameters('consortiumMemberId')))]",
                "subnet1Name": "[concat('subnet-',variables('suffixArray')[4])]",
                "subnet1Prefix": "[replace('10._.81.0/24','_',string(parameters('consortiumMemberId')))]",
                "subnet2Name": "[concat('gateway-subnet-',variables('suffixArray')[4])]",
                "subnet2Prefix": "[replace('10._.82.0/24','_',string(parameters('consortiumMemberId')))]",
                "nsgName": "[concat('Front-End-NSG-',variables('suffixArray')[4])]"
            }
        ],
        "uniq": "[substring(uniqueString(resourceGroup().id),0 ,5)]",
        "lbSettings": {
            "lbPublicIPAddressName": "[concat(variables('namingInfix'), '-lb-pip')]",
            "gatewayPublicIPName": "[concat(variables('namingInfix'), '-gwy-pip')]",
            "publicIPAllocationMethod": "Dynamic",
            "dnsHostName": "[concat(variables('namingInfix'), '-dns-',variables('uniq'))]",
            "lbFrontEndIpConfigName": "LBFrontEnd",
            "backendAddressPoolName": "LBBackendPool",
            "loadBalancerName": "[concat(variables('namingInfix'), '-lb')]",
            "FrontendPort1": "8545",
            "BackendPort1": "8545",
            "FrontendPort2": "8546",
            "BackendPort2": "8546",
            "FrontendPort3": "8180",
            "BackendPort3": "8180",
            "inboundNATRuleNamePrefix": "ssh-vm",
            "inboundNATRuleFrontendStartingPort": "3000",
            "inboundNATRuleFrontendEndingPort": "3020",
            "inboundNATRuleBackendPort": "22"
        },
        "keyVaultName": "[concat(variables('namingInfix'),'-kvlt')]",
        "vmssSettings": {
            "authenticationType": "[parameters('authType')]",
            "sshPublicKey": "[parameters('adminSSHKey')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "vmssName": "[concat(variables('namingInfix'), '-vmss')]",
            "nodeVMSize": "[parameters('validatorNodeVMSize')]",
            "storageAccountType": "[parameters('storageAccountType')]",
            "ubuntuImage": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04.0-LTS",
                "version": "latest"
            },
            "nicName": "[concat(variables('namingInfix'), '-nic')]",
            "ipConfigName": "ipConfig"
        }
    },
    "resources": [
        {
            "apiVersion": "[variables('apis').apiVersionDeployments]",
            "name": "network-resources-deploy",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('linkedUrls').networkResourcesUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vnetSettings": {
                        "value": "[variables('vnetSettings')]"
                    },
                    "lbSettings": {
                        "value": "[variables('lbSettings')]"
                    },
                    "regionCount": {
                        "value": "[parameters('regionCount')]"
                    },
                    "locationArray": {
                        "value": "[variables('locationArray')]"
                    },
                    "suffixArray": {
                        "value": "[variables('suffixArray')]"
                    },
                    "apis": {
                        "value": "[variables('apis')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apis').apiVersionDeployments]",
            "name": "[concat('vmss-deploy-',variables('suffixArray')[copyIndex()])]",
            "type": "Microsoft.Resources/deployments",
            "copy": {
                "name": "loop",
                "count": "[parameters('regionCount')]"
            },
            "dependsOn": [
                "network-resources-deploy"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('linkedUrls').vmssResourcesUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmssSettings": {
                        "value": "[variables('vmssSettings')]"
                    },
                    "lbSettings": {
                        "value": "[variables('lbSettings')]"
                    },
                    "vnetSettings": {
                        "value": "[variables('vnetSettings')[copyIndex()]]"
                    },
                    "capacity": {
                        "value": "[parameters('nodeCountPerRegion')]"
                    },
                    "location": {
                        "value": "[variables('locationArray')[copyIndex()]]"
                    },
                    "suffix": {
                        "value": "[variables('suffixArray')[copyIndex()]]"
                    },
                    "apis": {
                        "value": "[variables('apis')]"
                    }
                }
            }
        },
        {
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "[variables('apis').apiVersionKeyVault]",
            "location": "[parameters('location_1')]",
            "tags": {},
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "copy": [
                    {
                        "name": "accessPolicies",
                        "count": "[parameters('regionCount')]",
                        "input": {
                            "tenantId": "[subscription().tenantId]",
                            "objectId": "[reference(concat('vmss-deploy-',variables('suffixArray')[copyIndex('accessPolicies')])).outputs.principalId.value]",
                            "permissions": {
                                "keys": [
                                    "all"
                                ],
                                "secrets": [
                                    "all"
                                ],
                                "certificates": [
                                    "all"
                                ],
                                "storage": [
                                    "all"
                                ]
                            }
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true
            }
        }
    ]
}