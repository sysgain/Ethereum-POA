{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetSettings": {
            "type": "array"
        },
        "lbSettings": {
            "type": "object"
        },
        "regionCount": {
            "type": "int"
        },
        "locationArray": {
            "type": "array"
        },
        "suffixArray": {
            "type": "array"
        },
        "apis": {
            "type": "object"
        },
        "trafficManagerSettings": {
            "type": "object"
        }
    },
    "variables": {
        "lbPublicIPAddressName": "[parameters('lbSettings').lbPublicIPAddressName]",
        "publicIPAllocationMethod": "[parameters('lbSettings').publicIPAllocationMethod]",
        "gatewayPublicIPName": "[parameters('lbSettings').gatewayPublicIPName]",
        "nodeCountPerRegion": "[parameters('lbSettings').nodeCountPerRegion]",
        "dnsHostName": "[parameters('lbSettings').dnsHostName]",
        "loadBalancerName": "[parameters('lbSettings').loadBalancerName]",
        "lbFrontEndIpConfigName": "[parameters('lbSettings').lbFrontEndIpConfigName]",
        "backendAddressPoolName": "[parameters('lbSettings').backendAddressPoolName]",
        "FrontendPort1": "[parameters('lbSettings').FrontendPort1]",
        "BackendPort1": "[parameters('lbSettings').BackendPort1]",
        "FrontendPort2": "[parameters('lbSettings').FrontendPort2]",
        "BackendPort2": "[parameters('lbSettings').BackendPort2]",
        "FrontendPort3": "[parameters('lbSettings').FrontendPort3]",
        "BackendPort3": "[parameters('lbSettings').BackendPort3]",
        "inboundNATRuleNamePrefix": "[parameters('lbSettings').inboundNATRuleNamePrefix]",
        "inboundNATRuleFrontendStartingPort": "[parameters('lbSettings').inboundNATRuleFrontendStartingPort]",
        "inboundNATRuleFrontendEndingPort": "[parameters('lbSettings').inboundNATRuleFrontendEndingPort]",
        "inboundNATRuleBackendPort": "[parameters('lbSettings').inboundNATRuleBackendPort]"
    },
    "resources": [
        {
            "apiVersion": "[parameters('apis').apiVersionNetworkSecurityGroups]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('vnetSettings')[copyIndex()].nsgName]",
            "location": "[parameters('locationArray')[copyIndex()]]",
            "copy": {
                "name": "loop",
                "count": "[parameters('regionCount')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "jsonrpc-rule",
                        "properties": {
                            "description": "Allow JSON-RPC",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8545",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "ws-rule",
                        "properties": {
                            "description": "Allow WS-RPC",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8546",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "ui-rule",
                        "properties": {
                            "description": "Allow UI",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8180",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apis').apiVersionVirtualNetworks]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetSettings')[copyIndex()].vnetName]",
            "location": "[parameters('locationArray')[copyIndex()]]",
            "copy": {
                "name": "loop",
                "count": "[parameters('regionCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('vnetSettings')[copyIndex()].nsgName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetSettings')[copyIndex()].addressPrefixes]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('vnetSettings')[copyIndex()].subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetSettings')[copyIndex()].subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vnetSettings')[copyIndex()].nsgName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('vnetSettings')[copyIndex()].subnet2Name]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetSettings')[copyIndex()].subnet2Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apis').apiVersionPublicIPAddresses]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('lbPublicIPAddressName'),'-',parameters('suffixArray')[copyIndex()])]",
            "location": "[parameters('locationArray')[copyIndex()]]",
            "copy": {
                "name": "loop",
                "count": "[parameters('regionCount')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsHostName'),'-',parameters('suffixArray')[copyIndex()])]"
                }
            }
        },
        {
            "apiVersion": "[parameters('apis').apiVersionLoadBalancers]",
            "name": "[concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('locationArray')[copyIndex()]]",
            "copy": {
                "name": "loop",
                "count": "[parameters('regionCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('lbPublicIPAddressName'),'-',parameters('suffixArray')[copyIndex()]))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontEndIpConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('lbPublicIPAddressName'),'-',parameters('suffixArray')[copyIndex()]))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('backendAddressPoolName')]"
                    }
                ],
                "copy":[
                    {
                        "name": "loadBalancingRules",
                        "count": "[variables('nodeCountPerRegion')]",
                        "input":[
                            {
                                "name": "[concat('LB-Rule1-',copyIndex('loadBalancingRules'))]",
                                "properties": {
                                    "frontendIPConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/frontendIPConfigurations/',variables('lbFrontEndIpConfigName'))]"
                                    },
                                    "backendAddressPool": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/backendAddressPools/', variables('backendAddressPoolName'))]"
                                    },
                                    "protocol": "Tcp",
                                    "frontendPort": "[concat(variables('FrontendPort1'),copyIndex('loadBalancingRules'))]",
                                    "backendPort": "[concat(variables('BackendPort1'),copyIndex('loadBalancingRules'))]",
                                    "idleTimeoutInMinutes": 5,
                                    "probe": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/probes/lbProbe1-',copyIndex('loadBalancingRules'))]"
                                    }
                                }
                            },
                            {
                                "name": "[concat('LB-Rule2-',copyIndex('loadBalancingRules'))]",
                                "properties": {
                                    "frontendIPConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/frontendIPConfigurations/',variables('lbFrontEndIpConfigName'))]"
                                    },
                                    "backendAddressPool": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/backendAddressPools/', variables('backendAddressPoolName'))]"
                                    },
                                    "protocol": "Tcp",
                                    "frontendPort": "[concat(variables('FrontendPort2'),copyIndex('loadBalancingRules'))]",
                                    "backendPort": "[concat(variables('BackendPort2'),copyIndex('loadBalancingRules'))]",
                                    "idleTimeoutInMinutes": 5,
                                    "probe": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/probes/lbProbe2-',copyIndex('loadBalancingRules'))]"
                                    }
                                }
                            },
                            {
                                "name": "[concat('LB-Rule3-',copyIndex('loadBalancingRules'))]",
                                "properties": {
                                    "frontendIPConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/frontendIPConfigurations/',variables('lbFrontEndIpConfigName'))]"
                                    },
                                    "backendAddressPool": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/backendAddressPools/', variables('backendAddressPoolName'))]"
                                    },
                                    "protocol": "Tcp",
                                    "frontendPort": "[concat(variables('FrontendPort3'),copyIndex('loadBalancingRules'))]",
                                    "backendPort": "[concat(variables('BackendPort3'),copyIndex('loadBalancingRules'))]",
                                    "idleTimeoutInMinutes": 5,
                                    "probe": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/probes/lbProbe3-',copyIndex('loadBalancingRules'))]"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "probes",
                        "count": "[variables('nodeCountPerRegion')]",
                        "input":[
                            {
                                "name": "[concat('lbProbe1-',copyIndex('probes'))]",
                                "properties": {
                                    "protocol": "Tcp",
                                    "port": "[concat(variables('BackendPort1'),copyIndex('probes'))]",
                                    "intervalInSeconds": 5,
                                    "numberOfProbes": 2
                                }
                            },
                            {
                                "name": "[concat('lbProbe2-',copyIndex('probes'))]",
                                "properties": {
                                    "protocol": "Tcp",
                                    "port": "[concat(variables('BackendPort2'),copyIndex('probes'))]",
                                    "intervalInSeconds": 5,
                                    "numberOfProbes": 2
                                }
                            },
                            {
                                "name": "[concat('lbProbe3-',copyIndex('probes'))]",
                                "properties": {
                                    "protocol": "Tcp",
                                    "port": "[concat(variables('BackendPort3'),copyIndex('probes'))]",
                                    "intervalInSeconds": 5,
                                    "numberOfProbes": 2
                                }
                            }
                        ]

                    }
                ],
                
               
                "inboundNatPools": [
                    {
                        "name": "[variables('inboundNATRuleNamePrefix')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'),'-',parameters('suffixArray')[copyIndex()])),'/frontendIPConfigurations/',variables('lbFrontEndIpConfigName'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('inboundNATRuleFrontendStartingPort')]",
                            "frontendPortRangeEnd": "[variables('inboundNATRuleFrontendEndingPort')]",
                            "backendPort": "[variables('inboundNATRuleBackendPort')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apis').apiVersionPublicIPAddresses]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('gatewayPublicIPName'),'-',parameters('suffixArray')[copyIndex()])]",
            "location": "[parameters('locationArray')[copyIndex()]]",
            "copy": {
                "name": "loop",
                "count": "[parameters('regionCount')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[parameters('trafficManagerSettings').trafficManagerName]",
            "type": "Microsoft.Network/trafficManagerProfiles",
            "apiVersion": "[parameters('apis').apiVersionTrafficManager]",
            "tags": {},
            "location": "global",
            "properties": {
                "profileStatus": "Enabled",
                "trafficRoutingMethod": "Weighted",
                "dnsConfig": {
                    "relativeName": "[parameters('trafficManagerSettings').dnsRelativeName]",
                    "ttl": "[parameters('trafficManagerSettings').dnsTtl]"
                },
                "monitorConfig": {
                    "protocol": "[parameters('trafficManagerSettings').monitorProtocol]",
                    "port": "[parameters('trafficManagerSettings').monitorPort]",
                    "path": "[parameters('trafficManagerSettings').monitorPath]"
                },
                "copy": [
                    {
                        "name": "endpoints",
                        "count": "[parameters('regionCount')]",
                        "input": {
                            "name": "[concat(parameters('trafficManagerSettings').endpointNamePrefix, '-', parameters('suffixArray')[copyIndex('endpoints')]) ]",
                            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                            "properties": {
                                "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbPublicIPAddressName'),'-',parameters('suffixArray')[copyIndex('endpoints')]))]",
                                "endpointStatus": "Enabled",
                                "weight": 1
                            }
                        }
                    }
                ]
            }
        }
    ]
}